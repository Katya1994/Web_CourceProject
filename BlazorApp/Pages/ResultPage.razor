@inject IWebHostEnvironment Environment;
@inject CurrentUser _CurrentUser;
@inject IChecking _Checking;
@inject IFilePreparing _TextPreparing;

@page "/ResultPage"
@using BlazorApp.Data
@using System.Text
@using System.Diagnostics

<h3>Results:</h3>
@if (_CurrentUser.UserName != null)
{
    <label>Result for @_CurrentUser.UserName:</label>
    <label>your result of plagiary = @textCheckResult %</label>
}

@code {
    Dictionary<string, List<string>> _dictionary;
    double textCheckResult = 0;

    protected override void OnInitialized()
    {
        if(_CurrentUser.UserName is null)
            return;
        
        string path = Path.Combine(Environment.ContentRootPath, "uploads");
        _TextPreparing = new TextPreparing();

        Extracting.ExtractAll(path);
        _dictionary = _TextPreparing.FillCheckingDictionary(path);
        
        textCheckResult = _Checking.CalculatePlagPercent(_CurrentUser.UserName, _dictionary);
        WriteResultToFile(textCheckResult);
    }

    private void WriteResultToFile(double result)
    {
        var folderPath = Path.Combine(Environment.ContentRootPath, "results");
        if(!Directory.Exists(folderPath))
            System.IO.Directory.CreateDirectory(folderPath);

        string resultsPath = Path.Combine(folderPath, "results.txt");

        if (!File.Exists(resultsPath))
            File.Create(resultsPath);

        using (FileStream fstream = new FileStream(resultsPath, FileMode.Append))
        {
            using (StreamWriter writer = new StreamWriter(fstream, Encoding.Default))
            {
                writer.WriteLine($"{_CurrentUser.UserName}:{result}");
            }
        }
    }
}