@inject IWebHostEnvironment Environment;
@inject CurrentUser _CurrentUser;
@inject IChecking _Checking;
@inject IFilePreparing _TextPreparing;
@inject ILCodePreparing _IlCodePreparing;

@page "/ResultPage"
@using BlazorApp.Data
@using System.Text
@using System.Diagnostics

<h3>Results:</h3>
@if (_CurrentUser.UserName != null)
{
    <label>Result for @_CurrentUser.UserName:</label>
    <label>text result of plagiary = @_CurrentUser.TextResult %</label>
    <label>il code = @_CurrentUser.ILResult %</label>
}

@code {
    Dictionary<string, List<string>> _textDictionary;
    Dictionary<string, List<string>> _ilCodeDictionary;
    float textCheckResult = 0;
    float ilCheckResult = 0;

    protected override void OnInitialized()
    {
        if(_CurrentUser.UserName is null)
            return;
        
        string path = Path.Combine(Environment.ContentRootPath, "uploads");
        string saveIlPath = Path.Combine(Environment.ContentRootPath, "il");
        
        if(!Directory.Exists(saveIlPath))
            Directory.CreateDirectory(saveIlPath);

        //результаты
        if (_CurrentUser.TextResult is null)
        {
            _TextPreparing = new TextPreparing();
            _IlCodePreparing = new ILCodePreparing();

            Extracting.ExtractAll(path);
            _textDictionary = _TextPreparing.FillCheckingDictionary(path);
            _ilCodeDictionary = _IlCodePreparing.FillCheckingDictionary(path, saveIlPath);
            _CurrentUser.TextResult = _Checking.CalculatePlagPercent(_CurrentUser.UserName, _textDictionary).ToString("0.00");
        }
        if(_CurrentUser.ILResult is null) 
            _CurrentUser.ILResult = _Checking.CalculatePlagPercent(_CurrentUser.UserName, _ilCodeDictionary).ToString("0.00");

        WriteResultToFile(_CurrentUser.ILResult, _CurrentUser.TextResult);
    }

    private void WriteResultToFile(string textResult, string ilResult)
    {
        try
        {
            var folderPath = Path.Combine(Environment.ContentRootPath, "results");
            if (!Directory.Exists(folderPath))
                Directory.CreateDirectory(folderPath);

            string resultsPath = Path.Combine(folderPath, "results.txt");

            if (!File.Exists(resultsPath))
            {
                var resFile = File.Create(resultsPath);
                resFile.Close();
            }

            using (FileStream fstream = new FileStream(resultsPath, FileMode.Append))
            {
                using (StreamWriter writer = new StreamWriter(fstream, Encoding.Default))
                {
                    writer.WriteLine($"{_CurrentUser.UserName}:{textResult}:{ilResult}");
                }
            }
        }
        catch (Exception ex)
        {
            Debug.Print(ex.Message);
        }
    }
}